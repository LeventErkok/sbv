** Calling: z3 -nw -in -smt2
[GOOD] ; Automatically generated by SBV. Do not edit.
[GOOD] (set-option :print-success true)
[GOOD] (set-option :global-declarations true)
[GOOD] (set-option :smtlib2_compliant true)
[GOOD] (set-option :diagnostic-output-channel "stdout")
[GOOD] (set-option :produce-models true)
[GOOD] (set-logic ALL) ; has unbounded values, using catch-all.
[GOOD] ; --- uninterpreted sorts ---
[GOOD] ; --- tuples ---
[GOOD] ; --- sums ---
[GOOD] ; --- literal constants ---
[GOOD] (define-fun s11 () Int 1)
[GOOD] (define-fun s12 () Int 0)
[GOOD] (define-fun s14 () Int 2)
[GOOD] (define-fun s17 () Int 3)
[GOOD] (define-fun s20 () Int 4)
[GOOD] (define-fun s23 () Int 5)
[GOOD] (define-fun s26 () Int 6)
[GOOD] (define-fun s29 () Int 7)
[GOOD] (define-fun s32 () Int 8)
[GOOD] (define-fun s35 () Int 9)
[GOOD] (define-fun s38 () Int 10)
[GOOD] ; --- top level inputs ---
[GOOD] (declare-fun s0 () Bool) ; tracks user variable "b0"
[GOOD] (declare-fun s1 () Bool) ; tracks user variable "b1"
[GOOD] (declare-fun s2 () Bool) ; tracks user variable "b2"
[GOOD] (declare-fun s3 () Bool) ; tracks user variable "b3"
[GOOD] (declare-fun s4 () Bool) ; tracks user variable "b4"
[GOOD] (declare-fun s5 () Bool) ; tracks user variable "b5"
[GOOD] (declare-fun s6 () Bool) ; tracks user variable "b6"
[GOOD] (declare-fun s7 () Bool) ; tracks user variable "b7"
[GOOD] (declare-fun s8 () Bool) ; tracks user variable "b8"
[GOOD] (declare-fun s9 () Bool) ; tracks user variable "b9"
[GOOD] ; --- constant tables ---
[GOOD] ; --- non-constant tables ---
[GOOD] ; --- uninterpreted constants ---
[GOOD] ; --- user defined functions ---
[GOOD] ; --- assignments ---
[GOOD] (define-fun s10 () Bool ((_ pbeq 7 1 2 3 4 5 6 7 8 9 10) s0 s1 s2 s3 s4 s5 s6 s7 s8 s9))
[GOOD] (define-fun s13 () Int (ite s0 s11 s12))
[GOOD] (define-fun s15 () Int (ite s1 s14 s12))
[GOOD] (define-fun s16 () Int (+ s13 s15))
[GOOD] (define-fun s18 () Int (ite s2 s17 s12))
[GOOD] (define-fun s19 () Int (+ s16 s18))
[GOOD] (define-fun s21 () Int (ite s3 s20 s12))
[GOOD] (define-fun s22 () Int (+ s19 s21))
[GOOD] (define-fun s24 () Int (ite s4 s23 s12))
[GOOD] (define-fun s25 () Int (+ s22 s24))
[GOOD] (define-fun s27 () Int (ite s5 s26 s12))
[GOOD] (define-fun s28 () Int (+ s25 s27))
[GOOD] (define-fun s30 () Int (ite s6 s29 s12))
[GOOD] (define-fun s31 () Int (+ s28 s30))
[GOOD] (define-fun s33 () Int (ite s7 s32 s12))
[GOOD] (define-fun s34 () Int (+ s31 s33))
[GOOD] (define-fun s36 () Int (ite s8 s35 s12))
[GOOD] (define-fun s37 () Int (+ s34 s36))
[GOOD] (define-fun s39 () Int (ite s9 s38 s12))
[GOOD] (define-fun s40 () Int (+ s37 s39))
[GOOD] (define-fun s41 () Bool (= s29 s40))
[GOOD] (define-fun s42 () Bool (= s10 s41))
[GOOD] (define-fun s43 () Bool (not s42))
[GOOD] ; --- delayedEqualities ---
[GOOD] ; --- formula ---
[GOOD] (assert s43)
[SEND] (check-sat)
[RECV] unsat
*** Solver   : Z3
*** Exit code: ExitSuccess
