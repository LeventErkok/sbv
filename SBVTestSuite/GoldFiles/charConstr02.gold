** Calling: z3 -nw -in -smt2
[GOOD] ; Automatically generated by SBV. Do not edit.
[GOOD] (set-option :print-success true)
[GOOD] (set-option :global-declarations true)
[GOOD] (set-option :smtlib2_compliant true)
[GOOD] (set-option :diagnostic-output-channel "stdout")
[GOOD] (set-option :produce-models true)
[GOOD] (set-option :pp.max_depth      4294967295)
[GOOD] (set-option :pp.min_alias_size 4294967295)
[GOOD] (set-option :model.inline_def  true      )
[GOOD] (set-logic ALL) ; has unbounded values, using catch-all.
[GOOD] ; --- uninterpreted sorts ---
[GOOD] ; --- tuples ---
[GOOD] (declare-datatypes ((SBVTuple3 3)) ((par (T1 T2 T3)
                                           ((mkSBVTuple3 (proj_1_SBVTuple3 T1)
                                                         (proj_2_SBVTuple3 T2)
                                                         (proj_3_SBVTuple3 T3))))))
[GOOD] ; --- sums ---
[GOOD] ; --- literal constants ---
[GOOD] (define-fun s0 () Int 4)
[GOOD] (define-fun s2 () (SBVTuple3 String String String) (mkSBVTuple3 (_ char #x41) (_ char #x42) (_ char #x43)))
[GOOD] ; --- top level inputs ---
[GOOD] ; --- constant tables ---
[GOOD] ; --- non-constant tables ---
[GOOD] ; --- arrays ---
[GOOD] ; --- uninterpreted constants ---
[GOOD] (declare-fun cf3 (Int) (SBVTuple3 String String String))
[GOOD] (assert (forall ((a1 Int))
                       (let ((result (cf3 a1)))
                            (and (= 1 (str.len (proj_1_SBVTuple3 result)))
                                 (= 1 (str.len (proj_2_SBVTuple3 result)))
                                 (= 1 (str.len (proj_3_SBVTuple3 result)))
                            )
                       )))
[GOOD] ; --- user defined functions ---
[GOOD] ; --- assignments ---
[GOOD] (define-fun s1 () (SBVTuple3 String String String) (cf3 s0))
[GOOD] (define-fun s3 () Bool (distinct s1 s2))
[GOOD] ; --- arrayDelayeds ---
[GOOD] ; --- arraySetups ---
[GOOD] ; --- delayedEqualities ---
[GOOD] ; --- formula ---
[GOOD] (assert s3)
[SEND] (check-sat)
[RECV] sat
[GOOD] (set-option :pp.max_depth      4294967295)
[GOOD] (set-option :pp.min_alias_size 4294967295)
[GOOD] (set-option :model.inline_def  true      )
[SEND] (get-value (cf3))
[RECV] ((cf3 ((as const (Array Int (SBVTuple3 String String String)))
         (mkSBVTuple3 "A" "A" "A"))))

MODEL: SMTModel {modelObjectives = [], modelBindings = Nothing, modelAssocs = [], modelUIFuns = [("cf3",(True,SInteger -> (SChar, SChar, SChar),Right ([],('A','A','A') :: (Char, Char, Char))))]}
DONE.*** Solver   : Z3
*** Exit code: ExitSuccess
