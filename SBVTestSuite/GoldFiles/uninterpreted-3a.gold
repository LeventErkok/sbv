** Calling: z3 -nw -in -smt2
[GOOD] ; Automatically generated by SBV. Do not edit.
[GOOD] (set-option :print-success true)
[GOOD] (set-option :global-declarations true)
[GOOD] (set-option :smtlib2_compliant true)
[GOOD] (set-option :diagnostic-output-channel "stdout")
[GOOD] (set-option :produce-models true)
[GOOD] (set-logic QF_UFBV)
[GOOD] ; --- uninterpreted sorts ---
[GOOD] ; --- tuples ---
[GOOD] ; --- sums ---
[GOOD] ; --- literal constants ---
[GOOD] ; --- top level inputs ---
[GOOD] ; --- constant tables ---
[GOOD] ; --- non-constant tables ---
[GOOD] ; --- uninterpreted constants ---
[GOOD] (declare-fun p () Bool)
[GOOD] (declare-fun q () Bool)
[GOOD] ; --- user defined functions ---
[GOOD] ; --- assignments ---
[GOOD] (define-fun s0 () Bool p)
[GOOD] (define-fun s1 () Bool q)
[GOOD] (define-fun s2 () Bool (or s0 s1))
[GOOD] ; --- delayedEqualities ---
[GOOD] ; --- formula ---
[GOOD] (assert s2)
*** Checking Satisfiability, all solutions..
Fast allSat, Looking for solution 1
[SEND] (check-sat)
[RECV] sat
[SEND] (get-value (s0))
[RECV] ((s0 true))
[SEND] (get-value (s1))
[RECV] ((s1 false))
[GOOD] (push 1)
[GOOD] (define-fun s3 () Bool (not s0))
[GOOD] (assert s3)
Fast allSat, Looking for solution 2
[SEND] (check-sat)
[RECV] sat
[SEND] (get-value (s0))
[RECV] ((s0 false))
[SEND] (get-value (s1))
[RECV] ((s1 true))
[GOOD] (push 1)
[GOOD] (assert s0)
Fast allSat, Looking for solution 3
[SEND] (check-sat)
[RECV] unsat
[GOOD] (pop 1)
[GOOD] (push 1)
[GOOD] (define-fun s4 () Bool (not s1))
[GOOD] (assert s4)
[GOOD] (assert s3)
Fast allSat, Looking for solution 3
[SEND] (check-sat)
[RECV] unsat
[GOOD] (pop 1)
[GOOD] (pop 1)
[GOOD] (push 1)
[GOOD] (assert s1)
[GOOD] (assert s0)
Fast allSat, Looking for solution 3
[SEND] (check-sat)
[RECV] sat
[SEND] (get-value (s0))
[RECV] ((s0 true))
[SEND] (get-value (s1))
[RECV] ((s1 true))
[GOOD] (push 1)
[GOOD] (assert s4)
Fast allSat, Looking for solution 4
[SEND] (check-sat)
[RECV] unsat
[GOOD] (pop 1)
[GOOD] (pop 1)
*** Solver   : Z3
*** Exit code: ExitSuccess

 FINAL:Solution #1:
  p = True :: Bool
  q = True :: Bool
Solution #2:
  p = False :: Bool
  q =  True :: Bool
Solution #3:
  p =  True :: Bool
  q = False :: Bool
Found 3 different solutions.
DONE!
