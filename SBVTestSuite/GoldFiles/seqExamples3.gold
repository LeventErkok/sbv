** Calling: z3 -nw -in -smt2
[GOOD] ; Automatically generated by SBV. Do not edit.
[GOOD] (set-option :print-success true)
[GOOD] (set-option :global-declarations true)
[GOOD] (set-option :smtlib2_compliant true)
[GOOD] (set-option :diagnostic-output-channel "stdout")
[GOOD] (set-option :produce-models true)
[GOOD] (set-option :pp.max_depth      4294967295)
[GOOD] (set-option :pp.min_alias_size 4294967295)
[GOOD] (set-option :model.inline_def  true      )
[GOOD] (set-logic ALL) ; has unbounded values, using catch-all.
[GOOD] ; --- uninterpreted sorts ---
[GOOD] ; --- tuples ---
[GOOD] ; --- sums ---
[GOOD] ; --- literal constants ---
[GOOD] (define-fun s4 () (Seq Int) (seq.++ (seq.unit 1) (seq.unit 2) (seq.unit 3) (seq.unit 4)))
[GOOD] (define-fun s7 () (Seq Int) (seq.++ (seq.unit 3) (seq.unit 4) (seq.unit 5) (seq.unit 6)))
[GOOD] (define-fun s9 () (Seq Int) (as seq.empty (Seq Int)))
[GOOD] ; --- top level inputs ---
[GOOD] (declare-fun s0 () (Seq Int)) ; tracks user variable "a"
[GOOD] (declare-fun s1 () (Seq Int)) ; tracks user variable "b"
[GOOD] (declare-fun s2 () (Seq Int)) ; tracks user variable "c"
[GOOD] ; --- constant tables ---
[GOOD] ; --- non-constant tables ---
[GOOD] ; --- uninterpreted constants ---
[GOOD] ; --- user defined functions ---
[GOOD] ; --- assignments ---
[GOOD] (define-fun s3 () (Seq Int) (seq.++ s0 s1))
[GOOD] (define-fun s5 () Bool (= s3 s4))
[GOOD] (define-fun s6 () (Seq Int) (seq.++ s1 s2))
[GOOD] (define-fun s8 () Bool (= s6 s7))
[GOOD] (define-fun s10 () Bool (= s1 s9))
[GOOD] (define-fun s11 () Bool (not s10))
[GOOD] ; --- delayedEqualities ---
[GOOD] ; --- formula ---
[GOOD] (assert s5)
[GOOD] (assert s8)
[GOOD] (assert s11)
[SEND] (check-sat)
[RECV] sat
*** Solver   : Z3
*** Exit code: ExitSuccess
