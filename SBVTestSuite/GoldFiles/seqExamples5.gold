** Calling: z3 -nw -in -smt2
[GOOD] ; Automatically generated by SBV. Do not edit.
[GOOD] (set-option :print-success true)
[GOOD] (set-option :global-declarations true)
[GOOD] (set-option :smtlib2_compliant true)
[GOOD] (set-option :diagnostic-output-channel "stdout")
[GOOD] (set-option :produce-models true)
[GOOD] (set-option :pp.max_depth      4294967295)
[GOOD] (set-option :pp.min_alias_size 4294967295)
[GOOD] (set-option :model.inline_def  true      )
[GOOD] (set-logic ALL) ; has unbounded values, using catch-all.
[GOOD] ; --- tuples ---
[GOOD] ; --- sums ---
[GOOD] ; --- literal constants ---
[GOOD] (define-fun s3 () (Seq Int) (seq.++ (seq.unit 1) (seq.unit 2)))
[GOOD] (define-fun s6 () (Seq Int) (seq.++ (seq.unit 2) (seq.unit 1)))
[GOOD] (define-fun s12 () (Seq Int) (seq.unit 1))
[GOOD] ; --- top level inputs ---
[GOOD] (declare-fun s0 () (Seq Int)) ; tracks user variable "a"
[GOOD] (declare-fun s1 () (Seq Int)) ; tracks user variable "b"
[GOOD] (declare-fun s2 () (Seq Int)) ; tracks user variable "c"
[GOOD] ; --- constant tables ---
[GOOD] ; --- non-constant tables ---
[GOOD] ; --- uninterpreted constants ---
[GOOD] ; --- user defined functions ---
[GOOD] ; --- assignments ---
[GOOD] (define-fun s4 () (Seq Int) (seq.++ s3 s1))
[GOOD] (define-fun s5 () (Seq Int) (seq.++ s0 s4))
[GOOD] (define-fun s7 () (Seq Int) (seq.++ s6 s2))
[GOOD] (define-fun s8 () (Seq Int) (seq.++ s1 s7))
[GOOD] (define-fun s9 () Bool (= s5 s8))
[GOOD] (define-fun s10 () (Seq Int) (seq.++ s0 s1))
[GOOD] (define-fun s11 () Bool (= s2 s10))
[GOOD] (define-fun s13 () (Seq Int) (seq.++ s0 s12))
[GOOD] (define-fun s14 () (Seq Int) (seq.++ s12 s0))
[GOOD] (define-fun s15 () Bool (= s13 s14))
[GOOD] (define-fun s16 () Bool (not s15))
[GOOD] ; --- delayedEqualities ---
[GOOD] ; --- formula ---
[GOOD] (assert s9)
[GOOD] (assert s11)
[GOOD] (assert s16)
[SEND] (check-sat)
[RECV] sat
*** Solver   : Z3
*** Exit code: ExitSuccess
