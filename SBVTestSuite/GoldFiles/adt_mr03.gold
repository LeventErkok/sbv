** Calling: z3 -nw -in -smt2
[GOOD] ; Automatically generated by SBV. Do not edit.
[GOOD] (set-option :print-success true)
[GOOD] (set-option :global-declarations true)
[GOOD] (set-option :smtlib2_compliant true)
[GOOD] (set-option :diagnostic-output-channel "stdout")
[GOOD] (set-option :produce-models true)
[GOOD] (set-option :pp.max_depth      4294967295)
[GOOD] (set-option :pp.min_alias_size 4294967295)
[GOOD] (set-option :model.inline_def  true      )
[GOOD] (set-logic ALL) ; has unbounded values, using catch-all.
[GOOD] ; --- tuples ---
[GOOD] ; --- sums ---
[GOOD] ; --- ADTs  --- 
[GOOD] ; User defined ADT: A
[GOOD] (declare-datatype A (par (a b) (
           (Aa (getAa_1 a))
           (Ab (getAb_1 b))
           (Aab (getAab_1 a) (getAab_2 b))
           (A2 (getA2_1 (A b String)))
           (A3 (getA3_1 (A b a)))
       )))
[GOOD] ; --- literal constants ---
[GOOD] ; --- top level inputs ---
[GOOD] (declare-fun s0 () (A Int Bool)) ; tracks user variable "p"
[GOOD] ; --- constant tables ---
[GOOD] ; --- non-constant tables ---
[GOOD] ; --- uninterpreted constants ---
[GOOD] ; --- user defined functions ---
[GOOD] ; --- assignments ---
[GOOD] (define-fun s1 () Bool ((as is-A3 Bool) s0))
[GOOD] (define-fun s2 () (A Bool Int) (getA3_1 s0))
[GOOD] (define-fun s3 () Bool ((as is-Ab Bool) s2))
[GOOD] ; --- delayedEqualities ---
[GOOD] ; --- formula ---
[GOOD] (assert s1)
[GOOD] (assert s3)
[SEND] (check-sat)
[RECV] sat
[SEND] (get-value (s0))
[RECV] ((s0 (A3 (Ab 2))))

Got:
A3 {a3 = Ab {ab = 2}}
DONE
*** Solver   : Z3
*** Exit code: ExitSuccess
