** Calling: z3 -nw -in -smt2
[GOOD] ; Automatically generated by SBV. Do not edit.
[GOOD] (set-option :print-success true)
[GOOD] (set-option :global-declarations true)
[GOOD] (set-option :smtlib2_compliant true)
[GOOD] (set-option :diagnostic-output-channel "stdout")
[GOOD] (set-option :produce-models true)
[GOOD] (set-option :pp.max_depth      4294967295)
[GOOD] (set-option :pp.min_alias_size 4294967295)
[GOOD] (set-option :model.inline_def  true      )
[GOOD] (set-logic ALL) ; has unbounded values, using catch-all.
[GOOD] ; --- uninterpreted sorts ---
[GOOD] ; --- tuples ---
[GOOD] (declare-datatypes ((SBVTuple3 3)) ((par (T1 T2 T3)
                                           ((mkSBVTuple3 (proj_1_SBVTuple3 T1)
                                                         (proj_2_SBVTuple3 T2)
                                                         (proj_3_SBVTuple3 T3))))))
[GOOD] ; --- sums ---
[GOOD] ; --- literal constants ---
[GOOD] (define-fun s8 () Int 1)
[GOOD] (define-fun s10 () Int 2)
[GOOD] (define-fun s13 () Int 3)
[GOOD] (define-fun s16 () Int 4)
[GOOD] ; --- top level inputs ---
[GOOD] (declare-fun s0 () (SBVTuple3 Int Int Int)) ; tracks user variable "abx"
[GOOD] (declare-fun s1 () (SBVTuple3 Int Int Int)) ; tracks user variable "bay"
[GOOD] ; --- constant tables ---
[GOOD] ; --- non-constant tables ---
[GOOD] ; --- uninterpreted constants ---
[GOOD] ; --- user defined functions ---
[GOOD] ; --- assignments ---
[GOOD] (define-fun s2 () Int (proj_1_SBVTuple3 s0))
[GOOD] (define-fun s3 () Int (proj_2_SBVTuple3 s1))
[GOOD] (define-fun s4 () Bool (= s2 s3))
[GOOD] (define-fun s5 () Int (proj_2_SBVTuple3 s0))
[GOOD] (define-fun s6 () Int (proj_1_SBVTuple3 s1))
[GOOD] (define-fun s7 () Bool (= s5 s6))
[GOOD] (define-fun s9 () Bool (= s2 s8))
[GOOD] (define-fun s11 () Bool (= s5 s10))
[GOOD] (define-fun s12 () Int (proj_3_SBVTuple3 s0))
[GOOD] (define-fun s14 () Bool (= s12 s13))
[GOOD] (define-fun s15 () Int (proj_3_SBVTuple3 s1))
[GOOD] (define-fun s17 () Bool (= s15 s16))
[GOOD] ; --- delayedEqualities ---
[GOOD] ; --- formula ---
[GOOD] (assert s4)
[GOOD] (assert s7)
[GOOD] (assert s9)
[GOOD] (assert s11)
[GOOD] (assert s14)
[GOOD] (assert s17)
[SEND] (check-sat)
[RECV] sat
[SEND] (get-value (s0))
[RECV] ((s0 (mkSBVTuple3 1 2 3)))
[SEND] (get-value (s1))
[RECV] ((s1 (mkSBVTuple3 2 1 4)))
*** Solver   : Z3
*** Exit code: ExitSuccess

 FINAL: ((1,2,3),(2,1,4))
DONE!
