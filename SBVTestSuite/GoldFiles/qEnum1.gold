** Calling: z3 -nw -in -smt2
[GOOD] ; Automatically generated by SBV. Do not edit.
[GOOD] (set-option :print-success true)
[GOOD] (set-option :global-declarations true)
[GOOD] (set-option :smtlib2_compliant true)
[GOOD] (set-option :diagnostic-output-channel "stdout")
[GOOD] (set-option :produce-models true)
[GOOD] (set-logic ALL) ; has user-defined sorts, using catch-all.
[GOOD] ; --- uninterpreted sorts ---
[GOOD] (declare-datatypes ((BinOp 0)) (((Plus) (Minus) (Times))))
[GOOD] (define-fun BinOp_constrIndex ((x BinOp)) Int
          (ite (= x Plus) 0 (ite (= x Minus) 1 2))
       )
[GOOD] ; --- tuples ---
[GOOD] ; --- sums ---
[GOOD] ; --- literal constants ---
[GOOD] ; --- top level inputs ---
[GOOD] (declare-fun s0 () BinOp) ; tracks user variable "p"
[GOOD] (declare-fun s1 () BinOp) ; tracks user variable "m"
[GOOD] (declare-fun s2 () BinOp) ; tracks user variable "t"
[GOOD] ; --- constant tables ---
[GOOD] ; --- non-constant tables ---
[GOOD] ; --- uninterpreted constants ---
[GOOD] ; --- user defined functions ---
[GOOD] ; --- assignments ---
[GOOD] (define-fun s3 () Bool (<= (BinOp_constrIndex s0) (BinOp_constrIndex s1)))
[GOOD] (define-fun s4 () Bool (<= (BinOp_constrIndex s1) (BinOp_constrIndex s2)))
[GOOD] (define-fun s5 () Bool (distinct s0 s1 s2))
[GOOD] ; --- delayedEqualities ---
[GOOD] ; --- formula ---
[GOOD] (assert s3)
[GOOD] (assert s4)
[GOOD] (assert s5)
[SEND] (check-sat)
[RECV] sat
[SEND] (get-value (s0))
[RECV] ((s0 Plus))
[SEND] (get-value (s1))
[RECV] ((s1 Minus))
[SEND] (get-value (s2))
[RECV] ((s2 Times))
*** Solver   : Z3
*** Exit code: ExitSuccess
