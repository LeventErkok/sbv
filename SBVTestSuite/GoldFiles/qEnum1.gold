** Calling: z3 -nw -in -smt2
[GOOD] ; Automatically generated by SBV. Do not edit.
[GOOD] (set-option :print-success true)
[GOOD] (set-option :global-declarations true)
[GOOD] (set-option :smtlib2_compliant true)
[GOOD] (set-option :diagnostic-output-channel "stdout")
[GOOD] (set-option :produce-models true)
[GOOD] (set-option :pp.max_depth      4294967295)
[GOOD] (set-option :pp.min_alias_size 4294967295)
[GOOD] (set-option :model.inline_def  true      )
[GOOD] (set-logic ALL) ; has unbounded values, using catch-all.
[GOOD] ; --- tuples ---
[GOOD] ; --- sums ---
[GOOD] ; --- ADTs  --- 
[GOOD] ; User defined ADT: BinOp
[GOOD] (declare-datatype BinOp (
           (Plus)
           (Minus)
           (Times)
       ))
[GOOD] ; --- literal constants ---
[GOOD] (define-fun s3 () BinOp Plus)
[GOOD] (define-fun s5 () Int 0)
[GOOD] (define-fun s6 () BinOp Minus)
[GOOD] (define-fun s8 () Int 1)
[GOOD] (define-fun s9 () Int 2)
[GOOD] ; --- top level inputs ---
[GOOD] (declare-fun s0 () BinOp) ; tracks user variable "p"
[GOOD] (declare-fun s1 () BinOp) ; tracks user variable "m"
[GOOD] (declare-fun s2 () BinOp) ; tracks user variable "t"
[GOOD] ; --- constant tables ---
[GOOD] ; --- non-constant tables ---
[GOOD] ; --- uninterpreted constants ---
[GOOD] ; --- user defined functions ---
[GOOD] ; --- assignments ---
[GOOD] (define-fun s4 () Bool (= s0 s3))
[GOOD] (define-fun s7 () Bool (= s0 s6))
[GOOD] (define-fun s10 () Int (ite s7 s8 s9))
[GOOD] (define-fun s11 () Int (ite s4 s5 s10))
[GOOD] (define-fun s12 () Bool (= s1 s3))
[GOOD] (define-fun s13 () Bool (= s1 s6))
[GOOD] (define-fun s14 () Int (ite s13 s8 s9))
[GOOD] (define-fun s15 () Int (ite s12 s5 s14))
[GOOD] (define-fun s16 () Bool (<= s11 s15))
[GOOD] (define-fun s17 () Bool (= s2 s3))
[GOOD] (define-fun s18 () Bool (= s2 s6))
[GOOD] (define-fun s19 () Int (ite s18 s8 s9))
[GOOD] (define-fun s20 () Int (ite s17 s5 s19))
[GOOD] (define-fun s21 () Bool (<= s15 s20))
[GOOD] (define-fun s22 () Bool (distinct s0 s1 s2))
[GOOD] ; --- delayedEqualities ---
[GOOD] ; --- formula ---
[GOOD] (assert s16)
[GOOD] (assert s21)
[GOOD] (assert s22)
[SEND] (check-sat)
[RECV] sat
[SEND] (get-value (s0))
[RECV] ((s0 Plus))
[SEND] (get-value (s1))
[RECV] ((s1 Minus))
[SEND] (get-value (s2))
[RECV] ((s2 Times))
*** Solver   : Z3
*** Exit code: ExitSuccess
