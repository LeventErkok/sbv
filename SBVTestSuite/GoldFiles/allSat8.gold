** Calling: z3 -nw -in -smt2
[GOOD] ; Automatically generated by SBV. Do not edit.
[GOOD] (set-option :print-success true)
[GOOD] (set-option :global-declarations true)
[GOOD] (set-option :smtlib2_compliant true)
[GOOD] (set-option :diagnostic-output-channel "stdout")
[GOOD] (set-option :produce-models true)
[GOOD] (set-logic ALL) ; has unbounded values, using catch-all.
[GOOD] ; --- uninterpreted sorts ---
[GOOD] ; --- tuples ---
[GOOD] ; --- sums ---
[GOOD] ; --- literal constants ---
[GOOD] ; --- top level inputs ---
[GOOD] ; --- constant tables ---
[GOOD] ; --- non-constant tables ---
[GOOD] ; --- arrays ---
[GOOD] ; --- uninterpreted constants ---
[GOOD] (declare-fun f (Int) Int)
[GOOD] ; --- user defined functions ---
[GOOD] ; --- assignments ---
[GOOD] (define-fun s0 () Bool (forall ((l1_s0 Int))
         (let ((l1_s2 1))
         (let ((l1_s1 (f l1_s0)))
         (let ((l1_s3 (+ l1_s0 l1_s2)))
         (let ((l1_s4 (= l1_s1 l1_s3)))
         l1_s4))))))
[GOOD] ; --- arrayDelayeds ---
[GOOD] ; --- arraySetups ---
[GOOD] ; --- delayedEqualities ---
[GOOD] ; --- formula ---
[GOOD] (assert s0)
*** Checking Satisfiability, all solutions..
[GOOD] (set-option :pp.max_depth      4294967295)
[GOOD] (set-option :pp.min_alias_size 4294967295)
[GOOD] (set-option :model.inline_def  true      )
Looking for solution 1
[SEND] (check-sat)
[RECV] sat
[SEND] (get-value (f))
[RECV] ((f (lambda ((x!1 Int)) (+ 1 x!1))))

EXCEPTION CAUGHT:

*** allSat: Unsupported: Building a rejecting instance for:
***
***     f :: SInteger -> SInteger
***     f x = x + 1
***
*** At this time, SBV cannot compute allSat when the model has a non-table definition.
***
*** You can ignore specific functions via the 'isNonModelVar' filter:
***
***    allSatWith z3{isNonModelVar = (`elem` ["f"])} ...
***
*** Or you can ignore all uninterpreted functions for all-sat purposes using the 'allSatTrackUFs' parameter:
***
***    allSatWith z3{allSatTrackUFs = False} ...
***
*** You can see the response from the solver by running with the '{verbose = True}' option.
***
*** NB. If this is a use case you'd like SBV to support, please get in touch!

CallStack (from HasCallStack):
  error, called at ./Data/SBV/Control/Utils.hs:1660:57 in sbv-10.9-inplace:Data.SBV.Control.Utils
