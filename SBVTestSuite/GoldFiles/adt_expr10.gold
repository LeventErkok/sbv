** Calling: z3 -nw -in -smt2
[GOOD] ; Automatically generated by SBV. Do not edit.
[GOOD] (set-option :print-success true)
[GOOD] (set-option :global-declarations true)
[GOOD] (set-option :smtlib2_compliant true)
[GOOD] (set-option :diagnostic-output-channel "stdout")
[GOOD] (set-option :produce-models true)
[GOOD] (set-option :pp.max_depth      4294967295)
[GOOD] (set-option :pp.min_alias_size 4294967295)
[GOOD] (set-option :model.inline_def  true      )
[GOOD] (set-logic ALL) ; has unbounded values, using catch-all.
[GOOD] ; --- uninterpreted sorts ---
[GOOD] ; --- tuples ---
[GOOD] ; --- sums ---
[GOOD] ; --- ADTs  --- 
[GOOD] ; User defined ADT: Expr
[GOOD] (declare-datatype Expr (
           (Val (getVal_1 Int))
           (Var (getVar_1 String))
           (Add (getAdd_1 Expr) (getAdd_2 Expr))
           (Mul (getMul_1 Expr) (getMul_2 Expr))
           (Let (getLet_1 String) (getLet_2 Expr) (getLet_3 Expr))
       ))
[GOOD] ; --- literal constants ---
[GOOD] (define-fun s0 () Int (- 5))
[GOOD] (define-fun s4 () String "a")
[GOOD] (define-fun s7 () Int 0)
[GOOD] (define-fun s8 () String "b")
[GOOD] (define-fun s10 () String "c")
[GOOD] (define-fun s14 () Int 1)
[GOOD] (define-fun s15 () Int 2)
[GOOD] (define-fun s18 () Int 10)
[GOOD] (define-fun s21 () Int 3)
[GOOD] (define-fun s24 () Int 4)
[GOOD] (define-fun s27 () Int 5)
[GOOD] (define-fun s28 () Int 6)
[GOOD] (define-fun s35 () Int (- 4))
[GOOD] (define-fun s60 () Int (- 3))
[GOOD] (define-fun s85 () Int (- 2))
[GOOD] (define-fun s110 () Int (- 1))
[GOOD] (define-fun s303 () Int 7)
[GOOD] (define-fun s328 () Int 8)
[GOOD] (define-fun s353 () Int 9)
[GOOD] (define-fun s378 () Int 45)
[GOOD] ; --- top level inputs ---
[GOOD] ; --- constant tables ---
[GOOD] ; --- non-constant tables ---
[GOOD] ; --- uninterpreted constants ---
[GOOD] ; --- user defined functions ---
[GOOD] ; --- assignments ---
[GOOD] (define-fun s1 () Expr (Val s0))
[GOOD] (define-fun s2 () Bool ((_ is Var) s1))
[GOOD] (define-fun s3 () String (getVar_1 s1))
[GOOD] (define-fun s5 () Bool (= s3 s4))
[GOOD] (define-fun s6 () Bool (and s2 s5))
[GOOD] (define-fun s9 () Bool (= s3 s8))
[GOOD] (define-fun s11 () Bool (= s3 s10))
[GOOD] (define-fun s12 () Bool (or s9 s11))
[GOOD] (define-fun s13 () Bool (and s2 s12))
[GOOD] (define-fun s16 () Bool ((_ is Val) s1))
[GOOD] (define-fun s17 () Int (getVal_1 s1))
[GOOD] (define-fun s19 () Bool (< s17 s18))
[GOOD] (define-fun s20 () Bool (and s16 s19))
[GOOD] (define-fun s22 () Bool (= s17 s18))
[GOOD] (define-fun s23 () Bool (and s16 s22))
[GOOD] (define-fun s25 () Bool (> s17 s18))
[GOOD] (define-fun s26 () Bool (and s16 s25))
[GOOD] (define-fun s29 () Int (ite s26 s27 s28))
[GOOD] (define-fun s30 () Int (ite s23 s24 s29))
[GOOD] (define-fun s31 () Int (ite s20 s21 s30))
[GOOD] (define-fun s32 () Int (ite s2 s15 s31))
[GOOD] (define-fun s33 () Int (ite s13 s14 s32))
[GOOD] (define-fun s34 () Int (ite s6 s7 s33))
[GOOD] (define-fun s36 () Expr (Val s35))
[GOOD] (define-fun s37 () Bool ((_ is Var) s36))
[GOOD] (define-fun s38 () String (getVar_1 s36))
[GOOD] (define-fun s39 () Bool (= s4 s38))
[GOOD] (define-fun s40 () Bool (and s37 s39))
[GOOD] (define-fun s41 () Bool (= s8 s38))
[GOOD] (define-fun s42 () Bool (= s10 s38))
[GOOD] (define-fun s43 () Bool (or s41 s42))
[GOOD] (define-fun s44 () Bool (and s37 s43))
[GOOD] (define-fun s45 () Bool ((_ is Val) s36))
[GOOD] (define-fun s46 () Int (getVal_1 s36))
[GOOD] (define-fun s47 () Bool (< s46 s18))
[GOOD] (define-fun s48 () Bool (and s45 s47))
[GOOD] (define-fun s49 () Bool (= s18 s46))
[GOOD] (define-fun s50 () Bool (and s45 s49))
[GOOD] (define-fun s51 () Bool (> s46 s18))
[GOOD] (define-fun s52 () Bool (and s45 s51))
[GOOD] (define-fun s53 () Int (ite s52 s27 s28))
[GOOD] (define-fun s54 () Int (ite s50 s24 s53))
[GOOD] (define-fun s55 () Int (ite s48 s21 s54))
[GOOD] (define-fun s56 () Int (ite s37 s15 s55))
[GOOD] (define-fun s57 () Int (ite s44 s14 s56))
[GOOD] (define-fun s58 () Int (ite s40 s7 s57))
[GOOD] (define-fun s59 () Int (+ s34 s58))
[GOOD] (define-fun s61 () Expr (Val s60))
[GOOD] (define-fun s62 () Bool ((_ is Var) s61))
[GOOD] (define-fun s63 () String (getVar_1 s61))
[GOOD] (define-fun s64 () Bool (= s4 s63))
[GOOD] (define-fun s65 () Bool (and s62 s64))
[GOOD] (define-fun s66 () Bool (= s8 s63))
[GOOD] (define-fun s67 () Bool (= s10 s63))
[GOOD] (define-fun s68 () Bool (or s66 s67))
[GOOD] (define-fun s69 () Bool (and s62 s68))
[GOOD] (define-fun s70 () Bool ((_ is Val) s61))
[GOOD] (define-fun s71 () Int (getVal_1 s61))
[GOOD] (define-fun s72 () Bool (< s71 s18))
[GOOD] (define-fun s73 () Bool (and s70 s72))
[GOOD] (define-fun s74 () Bool (= s18 s71))
[GOOD] (define-fun s75 () Bool (and s70 s74))
[GOOD] (define-fun s76 () Bool (> s71 s18))
[GOOD] (define-fun s77 () Bool (and s70 s76))
[GOOD] (define-fun s78 () Int (ite s77 s27 s28))
[GOOD] (define-fun s79 () Int (ite s75 s24 s78))
[GOOD] (define-fun s80 () Int (ite s73 s21 s79))
[GOOD] (define-fun s81 () Int (ite s62 s15 s80))
[GOOD] (define-fun s82 () Int (ite s69 s14 s81))
[GOOD] (define-fun s83 () Int (ite s65 s7 s82))
[GOOD] (define-fun s84 () Int (+ s59 s83))
[GOOD] (define-fun s86 () Expr (Val s85))
[GOOD] (define-fun s87 () Bool ((_ is Var) s86))
[GOOD] (define-fun s88 () String (getVar_1 s86))
[GOOD] (define-fun s89 () Bool (= s4 s88))
[GOOD] (define-fun s90 () Bool (and s87 s89))
[GOOD] (define-fun s91 () Bool (= s8 s88))
[GOOD] (define-fun s92 () Bool (= s10 s88))
[GOOD] (define-fun s93 () Bool (or s91 s92))
[GOOD] (define-fun s94 () Bool (and s87 s93))
[GOOD] (define-fun s95 () Bool ((_ is Val) s86))
[GOOD] (define-fun s96 () Int (getVal_1 s86))
[GOOD] (define-fun s97 () Bool (< s96 s18))
[GOOD] (define-fun s98 () Bool (and s95 s97))
[GOOD] (define-fun s99 () Bool (= s18 s96))
[GOOD] (define-fun s100 () Bool (and s95 s99))
[GOOD] (define-fun s101 () Bool (> s96 s18))
[GOOD] (define-fun s102 () Bool (and s95 s101))
[GOOD] (define-fun s103 () Int (ite s102 s27 s28))
[GOOD] (define-fun s104 () Int (ite s100 s24 s103))
[GOOD] (define-fun s105 () Int (ite s98 s21 s104))
[GOOD] (define-fun s106 () Int (ite s87 s15 s105))
[GOOD] (define-fun s107 () Int (ite s94 s14 s106))
[GOOD] (define-fun s108 () Int (ite s90 s7 s107))
[GOOD] (define-fun s109 () Int (+ s84 s108))
[GOOD] (define-fun s111 () Expr (Val s110))
[GOOD] (define-fun s112 () Bool ((_ is Var) s111))
[GOOD] (define-fun s113 () String (getVar_1 s111))
[GOOD] (define-fun s114 () Bool (= s4 s113))
[GOOD] (define-fun s115 () Bool (and s112 s114))
[GOOD] (define-fun s116 () Bool (= s8 s113))
[GOOD] (define-fun s117 () Bool (= s10 s113))
[GOOD] (define-fun s118 () Bool (or s116 s117))
[GOOD] (define-fun s119 () Bool (and s112 s118))
[GOOD] (define-fun s120 () Bool ((_ is Val) s111))
[GOOD] (define-fun s121 () Int (getVal_1 s111))
[GOOD] (define-fun s122 () Bool (< s121 s18))
[GOOD] (define-fun s123 () Bool (and s120 s122))
[GOOD] (define-fun s124 () Bool (= s18 s121))
[GOOD] (define-fun s125 () Bool (and s120 s124))
[GOOD] (define-fun s126 () Bool (> s121 s18))
[GOOD] (define-fun s127 () Bool (and s120 s126))
[GOOD] (define-fun s128 () Int (ite s127 s27 s28))
[GOOD] (define-fun s129 () Int (ite s125 s24 s128))
[GOOD] (define-fun s130 () Int (ite s123 s21 s129))
[GOOD] (define-fun s131 () Int (ite s112 s15 s130))
[GOOD] (define-fun s132 () Int (ite s119 s14 s131))
[GOOD] (define-fun s133 () Int (ite s115 s7 s132))
[GOOD] (define-fun s134 () Int (+ s109 s133))
[GOOD] (define-fun s135 () Expr (Val s7))
[GOOD] (define-fun s136 () Bool ((_ is Var) s135))
[GOOD] (define-fun s137 () String (getVar_1 s135))
[GOOD] (define-fun s138 () Bool (= s4 s137))
[GOOD] (define-fun s139 () Bool (and s136 s138))
[GOOD] (define-fun s140 () Bool (= s8 s137))
[GOOD] (define-fun s141 () Bool (= s10 s137))
[GOOD] (define-fun s142 () Bool (or s140 s141))
[GOOD] (define-fun s143 () Bool (and s136 s142))
[GOOD] (define-fun s144 () Bool ((_ is Val) s135))
[GOOD] (define-fun s145 () Int (getVal_1 s135))
[GOOD] (define-fun s146 () Bool (< s145 s18))
[GOOD] (define-fun s147 () Bool (and s144 s146))
[GOOD] (define-fun s148 () Bool (= s18 s145))
[GOOD] (define-fun s149 () Bool (and s144 s148))
[GOOD] (define-fun s150 () Bool (> s145 s18))
[GOOD] (define-fun s151 () Bool (and s144 s150))
[GOOD] (define-fun s152 () Int (ite s151 s27 s28))
[GOOD] (define-fun s153 () Int (ite s149 s24 s152))
[GOOD] (define-fun s154 () Int (ite s147 s21 s153))
[GOOD] (define-fun s155 () Int (ite s136 s15 s154))
[GOOD] (define-fun s156 () Int (ite s143 s14 s155))
[GOOD] (define-fun s157 () Int (ite s139 s7 s156))
[GOOD] (define-fun s158 () Int (+ s134 s157))
[GOOD] (define-fun s159 () Expr (Val s14))
[GOOD] (define-fun s160 () Bool ((_ is Var) s159))
[GOOD] (define-fun s161 () String (getVar_1 s159))
[GOOD] (define-fun s162 () Bool (= s4 s161))
[GOOD] (define-fun s163 () Bool (and s160 s162))
[GOOD] (define-fun s164 () Bool (= s8 s161))
[GOOD] (define-fun s165 () Bool (= s10 s161))
[GOOD] (define-fun s166 () Bool (or s164 s165))
[GOOD] (define-fun s167 () Bool (and s160 s166))
[GOOD] (define-fun s168 () Bool ((_ is Val) s159))
[GOOD] (define-fun s169 () Int (getVal_1 s159))
[GOOD] (define-fun s170 () Bool (< s169 s18))
[GOOD] (define-fun s171 () Bool (and s168 s170))
[GOOD] (define-fun s172 () Bool (= s18 s169))
[GOOD] (define-fun s173 () Bool (and s168 s172))
[GOOD] (define-fun s174 () Bool (> s169 s18))
[GOOD] (define-fun s175 () Bool (and s168 s174))
[GOOD] (define-fun s176 () Int (ite s175 s27 s28))
[GOOD] (define-fun s177 () Int (ite s173 s24 s176))
[GOOD] (define-fun s178 () Int (ite s171 s21 s177))
[GOOD] (define-fun s179 () Int (ite s160 s15 s178))
[GOOD] (define-fun s180 () Int (ite s167 s14 s179))
[GOOD] (define-fun s181 () Int (ite s163 s7 s180))
[GOOD] (define-fun s182 () Int (+ s158 s181))
[GOOD] (define-fun s183 () Expr (Val s15))
[GOOD] (define-fun s184 () Bool ((_ is Var) s183))
[GOOD] (define-fun s185 () String (getVar_1 s183))
[GOOD] (define-fun s186 () Bool (= s4 s185))
[GOOD] (define-fun s187 () Bool (and s184 s186))
[GOOD] (define-fun s188 () Bool (= s8 s185))
[GOOD] (define-fun s189 () Bool (= s10 s185))
[GOOD] (define-fun s190 () Bool (or s188 s189))
[GOOD] (define-fun s191 () Bool (and s184 s190))
[GOOD] (define-fun s192 () Bool ((_ is Val) s183))
[GOOD] (define-fun s193 () Int (getVal_1 s183))
[GOOD] (define-fun s194 () Bool (< s193 s18))
[GOOD] (define-fun s195 () Bool (and s192 s194))
[GOOD] (define-fun s196 () Bool (= s18 s193))
[GOOD] (define-fun s197 () Bool (and s192 s196))
[GOOD] (define-fun s198 () Bool (> s193 s18))
[GOOD] (define-fun s199 () Bool (and s192 s198))
[GOOD] (define-fun s200 () Int (ite s199 s27 s28))
[GOOD] (define-fun s201 () Int (ite s197 s24 s200))
[GOOD] (define-fun s202 () Int (ite s195 s21 s201))
[GOOD] (define-fun s203 () Int (ite s184 s15 s202))
[GOOD] (define-fun s204 () Int (ite s191 s14 s203))
[GOOD] (define-fun s205 () Int (ite s187 s7 s204))
[GOOD] (define-fun s206 () Int (+ s182 s205))
[GOOD] (define-fun s207 () Expr (Val s21))
[GOOD] (define-fun s208 () Bool ((_ is Var) s207))
[GOOD] (define-fun s209 () String (getVar_1 s207))
[GOOD] (define-fun s210 () Bool (= s4 s209))
[GOOD] (define-fun s211 () Bool (and s208 s210))
[GOOD] (define-fun s212 () Bool (= s8 s209))
[GOOD] (define-fun s213 () Bool (= s10 s209))
[GOOD] (define-fun s214 () Bool (or s212 s213))
[GOOD] (define-fun s215 () Bool (and s208 s214))
[GOOD] (define-fun s216 () Bool ((_ is Val) s207))
[GOOD] (define-fun s217 () Int (getVal_1 s207))
[GOOD] (define-fun s218 () Bool (< s217 s18))
[GOOD] (define-fun s219 () Bool (and s216 s218))
[GOOD] (define-fun s220 () Bool (= s18 s217))
[GOOD] (define-fun s221 () Bool (and s216 s220))
[GOOD] (define-fun s222 () Bool (> s217 s18))
[GOOD] (define-fun s223 () Bool (and s216 s222))
[GOOD] (define-fun s224 () Int (ite s223 s27 s28))
[GOOD] (define-fun s225 () Int (ite s221 s24 s224))
[GOOD] (define-fun s226 () Int (ite s219 s21 s225))
[GOOD] (define-fun s227 () Int (ite s208 s15 s226))
[GOOD] (define-fun s228 () Int (ite s215 s14 s227))
[GOOD] (define-fun s229 () Int (ite s211 s7 s228))
[GOOD] (define-fun s230 () Int (+ s206 s229))
[GOOD] (define-fun s231 () Expr (Val s24))
[GOOD] (define-fun s232 () Bool ((_ is Var) s231))
[GOOD] (define-fun s233 () String (getVar_1 s231))
[GOOD] (define-fun s234 () Bool (= s4 s233))
[GOOD] (define-fun s235 () Bool (and s232 s234))
[GOOD] (define-fun s236 () Bool (= s8 s233))
[GOOD] (define-fun s237 () Bool (= s10 s233))
[GOOD] (define-fun s238 () Bool (or s236 s237))
[GOOD] (define-fun s239 () Bool (and s232 s238))
[GOOD] (define-fun s240 () Bool ((_ is Val) s231))
[GOOD] (define-fun s241 () Int (getVal_1 s231))
[GOOD] (define-fun s242 () Bool (< s241 s18))
[GOOD] (define-fun s243 () Bool (and s240 s242))
[GOOD] (define-fun s244 () Bool (= s18 s241))
[GOOD] (define-fun s245 () Bool (and s240 s244))
[GOOD] (define-fun s246 () Bool (> s241 s18))
[GOOD] (define-fun s247 () Bool (and s240 s246))
[GOOD] (define-fun s248 () Int (ite s247 s27 s28))
[GOOD] (define-fun s249 () Int (ite s245 s24 s248))
[GOOD] (define-fun s250 () Int (ite s243 s21 s249))
[GOOD] (define-fun s251 () Int (ite s232 s15 s250))
[GOOD] (define-fun s252 () Int (ite s239 s14 s251))
[GOOD] (define-fun s253 () Int (ite s235 s7 s252))
[GOOD] (define-fun s254 () Int (+ s230 s253))
[GOOD] (define-fun s255 () Expr (Val s27))
[GOOD] (define-fun s256 () Bool ((_ is Var) s255))
[GOOD] (define-fun s257 () String (getVar_1 s255))
[GOOD] (define-fun s258 () Bool (= s4 s257))
[GOOD] (define-fun s259 () Bool (and s256 s258))
[GOOD] (define-fun s260 () Bool (= s8 s257))
[GOOD] (define-fun s261 () Bool (= s10 s257))
[GOOD] (define-fun s262 () Bool (or s260 s261))
[GOOD] (define-fun s263 () Bool (and s256 s262))
[GOOD] (define-fun s264 () Bool ((_ is Val) s255))
[GOOD] (define-fun s265 () Int (getVal_1 s255))
[GOOD] (define-fun s266 () Bool (< s265 s18))
[GOOD] (define-fun s267 () Bool (and s264 s266))
[GOOD] (define-fun s268 () Bool (= s18 s265))
[GOOD] (define-fun s269 () Bool (and s264 s268))
[GOOD] (define-fun s270 () Bool (> s265 s18))
[GOOD] (define-fun s271 () Bool (and s264 s270))
[GOOD] (define-fun s272 () Int (ite s271 s27 s28))
[GOOD] (define-fun s273 () Int (ite s269 s24 s272))
[GOOD] (define-fun s274 () Int (ite s267 s21 s273))
[GOOD] (define-fun s275 () Int (ite s256 s15 s274))
[GOOD] (define-fun s276 () Int (ite s263 s14 s275))
[GOOD] (define-fun s277 () Int (ite s259 s7 s276))
[GOOD] (define-fun s278 () Int (+ s254 s277))
[GOOD] (define-fun s279 () Expr (Val s28))
[GOOD] (define-fun s280 () Bool ((_ is Var) s279))
[GOOD] (define-fun s281 () String (getVar_1 s279))
[GOOD] (define-fun s282 () Bool (= s4 s281))
[GOOD] (define-fun s283 () Bool (and s280 s282))
[GOOD] (define-fun s284 () Bool (= s8 s281))
[GOOD] (define-fun s285 () Bool (= s10 s281))
[GOOD] (define-fun s286 () Bool (or s284 s285))
[GOOD] (define-fun s287 () Bool (and s280 s286))
[GOOD] (define-fun s288 () Bool ((_ is Val) s279))
[GOOD] (define-fun s289 () Int (getVal_1 s279))
[GOOD] (define-fun s290 () Bool (< s289 s18))
[GOOD] (define-fun s291 () Bool (and s288 s290))
[GOOD] (define-fun s292 () Bool (= s18 s289))
[GOOD] (define-fun s293 () Bool (and s288 s292))
[GOOD] (define-fun s294 () Bool (> s289 s18))
[GOOD] (define-fun s295 () Bool (and s288 s294))
[GOOD] (define-fun s296 () Int (ite s295 s27 s28))
[GOOD] (define-fun s297 () Int (ite s293 s24 s296))
[GOOD] (define-fun s298 () Int (ite s291 s21 s297))
[GOOD] (define-fun s299 () Int (ite s280 s15 s298))
[GOOD] (define-fun s300 () Int (ite s287 s14 s299))
[GOOD] (define-fun s301 () Int (ite s283 s7 s300))
[GOOD] (define-fun s302 () Int (+ s278 s301))
[GOOD] (define-fun s304 () Expr (Val s303))
[GOOD] (define-fun s305 () Bool ((_ is Var) s304))
[GOOD] (define-fun s306 () String (getVar_1 s304))
[GOOD] (define-fun s307 () Bool (= s4 s306))
[GOOD] (define-fun s308 () Bool (and s305 s307))
[GOOD] (define-fun s309 () Bool (= s8 s306))
[GOOD] (define-fun s310 () Bool (= s10 s306))
[GOOD] (define-fun s311 () Bool (or s309 s310))
[GOOD] (define-fun s312 () Bool (and s305 s311))
[GOOD] (define-fun s313 () Bool ((_ is Val) s304))
[GOOD] (define-fun s314 () Int (getVal_1 s304))
[GOOD] (define-fun s315 () Bool (< s314 s18))
[GOOD] (define-fun s316 () Bool (and s313 s315))
[GOOD] (define-fun s317 () Bool (= s18 s314))
[GOOD] (define-fun s318 () Bool (and s313 s317))
[GOOD] (define-fun s319 () Bool (> s314 s18))
[GOOD] (define-fun s320 () Bool (and s313 s319))
[GOOD] (define-fun s321 () Int (ite s320 s27 s28))
[GOOD] (define-fun s322 () Int (ite s318 s24 s321))
[GOOD] (define-fun s323 () Int (ite s316 s21 s322))
[GOOD] (define-fun s324 () Int (ite s305 s15 s323))
[GOOD] (define-fun s325 () Int (ite s312 s14 s324))
[GOOD] (define-fun s326 () Int (ite s308 s7 s325))
[GOOD] (define-fun s327 () Int (+ s302 s326))
[GOOD] (define-fun s329 () Expr (Val s328))
[GOOD] (define-fun s330 () Bool ((_ is Var) s329))
[GOOD] (define-fun s331 () String (getVar_1 s329))
[GOOD] (define-fun s332 () Bool (= s4 s331))
[GOOD] (define-fun s333 () Bool (and s330 s332))
[GOOD] (define-fun s334 () Bool (= s8 s331))
[GOOD] (define-fun s335 () Bool (= s10 s331))
[GOOD] (define-fun s336 () Bool (or s334 s335))
[GOOD] (define-fun s337 () Bool (and s330 s336))
[GOOD] (define-fun s338 () Bool ((_ is Val) s329))
[GOOD] (define-fun s339 () Int (getVal_1 s329))
[GOOD] (define-fun s340 () Bool (< s339 s18))
[GOOD] (define-fun s341 () Bool (and s338 s340))
[GOOD] (define-fun s342 () Bool (= s18 s339))
[GOOD] (define-fun s343 () Bool (and s338 s342))
[GOOD] (define-fun s344 () Bool (> s339 s18))
[GOOD] (define-fun s345 () Bool (and s338 s344))
[GOOD] (define-fun s346 () Int (ite s345 s27 s28))
[GOOD] (define-fun s347 () Int (ite s343 s24 s346))
[GOOD] (define-fun s348 () Int (ite s341 s21 s347))
[GOOD] (define-fun s349 () Int (ite s330 s15 s348))
[GOOD] (define-fun s350 () Int (ite s337 s14 s349))
[GOOD] (define-fun s351 () Int (ite s333 s7 s350))
[GOOD] (define-fun s352 () Int (+ s327 s351))
[GOOD] (define-fun s354 () Expr (Val s353))
[GOOD] (define-fun s355 () Bool ((_ is Var) s354))
[GOOD] (define-fun s356 () String (getVar_1 s354))
[GOOD] (define-fun s357 () Bool (= s4 s356))
[GOOD] (define-fun s358 () Bool (and s355 s357))
[GOOD] (define-fun s359 () Bool (= s8 s356))
[GOOD] (define-fun s360 () Bool (= s10 s356))
[GOOD] (define-fun s361 () Bool (or s359 s360))
[GOOD] (define-fun s362 () Bool (and s355 s361))
[GOOD] (define-fun s363 () Bool ((_ is Val) s354))
[GOOD] (define-fun s364 () Int (getVal_1 s354))
[GOOD] (define-fun s365 () Bool (< s364 s18))
[GOOD] (define-fun s366 () Bool (and s363 s365))
[GOOD] (define-fun s367 () Bool (= s18 s364))
[GOOD] (define-fun s368 () Bool (and s363 s367))
[GOOD] (define-fun s369 () Bool (> s364 s18))
[GOOD] (define-fun s370 () Bool (and s363 s369))
[GOOD] (define-fun s371 () Int (ite s370 s27 s28))
[GOOD] (define-fun s372 () Int (ite s368 s24 s371))
[GOOD] (define-fun s373 () Int (ite s366 s21 s372))
[GOOD] (define-fun s374 () Int (ite s355 s15 s373))
[GOOD] (define-fun s375 () Int (ite s362 s14 s374))
[GOOD] (define-fun s376 () Int (ite s358 s7 s375))
[GOOD] (define-fun s377 () Int (+ s352 s376))
[GOOD] (define-fun s379 () Bool (distinct s377 s378))
[GOOD] ; --- delayedEqualities ---
[GOOD] ; --- formula ---
[GOOD] (assert s379)
[SEND] (check-sat)
[RECV] unsat
All good.
*** Solver   : Z3
*** Exit code: ExitSuccess
