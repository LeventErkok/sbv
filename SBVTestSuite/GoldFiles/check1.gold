** Calling: z3 -nw -in -smt2
[GOOD] ; Automatically generated by SBV. Do not edit.
[GOOD] (set-option :print-success true)
[GOOD] (set-option :global-declarations true)
[GOOD] (set-option :smtlib2_compliant true)
[GOOD] (set-option :diagnostic-output-channel "stdout")
[GOOD] (set-option :produce-models true)
[GOOD] (set-logic QF_BV)
[GOOD] ; --- uninterpreted sorts ---
[GOOD] ; --- tuples ---
[GOOD] ; --- sums ---
[GOOD] ; --- literal constants ---
[GOOD] ; --- top level inputs ---
[GOOD] (declare-fun s0 () (_ BitVec 8))
[GOOD] (declare-fun s1 () (_ BitVec 16))
[GOOD] (declare-fun s2 () (_ BitVec 8))
[GOOD] (declare-fun s3 () (_ BitVec 16))
[GOOD] ; --- constant tables ---
[GOOD] ; --- non-constant tables ---
[GOOD] ; --- uninterpreted constants ---
[GOOD] ; --- user defined functions ---
[GOOD] ; --- assignments ---
[GOOD] (define-fun s4 () Bool (= s0 s2))
[GOOD] (define-fun s5 () Bool (= s1 s3))
[GOOD] (define-fun s6 () Bool (and s4 s5))
[GOOD] ; --- delayedEqualities ---
[GOOD] ; --- formula ---
[GOOD] (assert (not s6))
[SEND] (check-sat)
[RECV] sat
[SEND] (get-value (s0))
[RECV] ((s0 #xff))
[SEND] (get-value (s1))
[RECV] ((s1 #x0000))
[SEND] (get-value (s2))
[RECV] ((s2 #x00))
[SEND] (get-value (s3))
[RECV] ((s3 #x0000))
*** Solver   : Z3
*** Exit code: ExitSuccess
