** Calling: z3 -nw -in -smt2
[GOOD] ; Automatically generated by SBV. Do not edit.
[GOOD] (set-option :print-success true)
[GOOD] (set-option :global-declarations true)
[GOOD] (set-option :smtlib2_compliant true)
[GOOD] (set-option :diagnostic-output-channel "stdout")
[GOOD] (set-option :produce-models true)
[GOOD] (set-option :pp.max_depth      4294967295)
[GOOD] (set-option :pp.min_alias_size 4294967295)
[GOOD] (set-option :model.inline_def  true      )
[GOOD] (set-logic ALL) ; external query, using all logics.
[GOOD] ; --- uninterpreted sorts ---
[GOOD] ; --- tuples ---
[GOOD] ; --- sums ---
[GOOD] ; --- literal constants ---
[GOOD] ; --- top level inputs ---
[GOOD] (declare-fun s0 () (Array (_ BitVec 8) (_ BitVec 8))) ; tracks user variable "a"
[GOOD] (declare-fun s1 () (_ BitVec 8)) ; tracks user variable "a1"
[GOOD] (declare-fun s2 () (_ BitVec 8)) ; tracks user variable "a2"
[GOOD] (declare-fun s4 () (_ BitVec 8)) ; tracks user variable "v1"
[GOOD] ; --- constant tables ---
[GOOD] ; --- non-constant tables ---
[GOOD] ; --- uninterpreted constants ---
[GOOD] ; --- user defined functions ---
[GOOD] ; --- assignments ---
[GOOD] (define-fun s3 () Bool (distinct s1 s2))
[GOOD] ; --- delayedEqualities ---
[GOOD] ; --- formula ---
[GOOD] (assert s3)
[GOOD] (define-fun s5 () (Array (_ BitVec 8) (_ BitVec 8)) (store s0 s1 s4))
[GOOD] (define-fun s6 () (_ BitVec 8) (select s5 s1))
[GOOD] (define-fun s7 () Bool (= s4 s6))
[GOOD] (assert s7)
[SEND] (check-sat)
[RECV] sat
[SEND] (get-value (s1))
[RECV] ((s1 #xff))
[SEND] (get-value (s2))
[RECV] ((s2 #x00))
[SEND] (get-value (s4))
[RECV] ((s4 #x00))
*** Solver   : Z3
*** Exit code: ExitSuccess

 FINAL:(255,0,0)
DONE!
