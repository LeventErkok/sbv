** Calling: cvc4 --lang smt --incremental --interactive --no-interactive-prompt --model-witness-value
[GOOD] ; Automatically generated by SBV. Do not edit.
[GOOD] (set-option :print-success true)
[GOOD] (set-option :global-declarations true)
[GOOD] (set-option :diagnostic-output-channel "stdout")
[GOOD] (set-option :produce-models true)
[GOOD] (set-logic ALL) ; has algebraic reals, using catch-all.
[GOOD] ; --- uninterpreted sorts ---
[GOOD] ; --- tuples ---
[GOOD] ; --- sums ---
[GOOD] ; --- literal constants ---
[GOOD] (define-fun s2 () Real (/ 2.0 1.0))
[GOOD] ; --- top level inputs ---
[GOOD] (declare-fun s0 () Real)
[GOOD] ; --- constant tables ---
[GOOD] ; --- non-constant tables ---
[GOOD] ; --- uninterpreted constants ---
[GOOD] ; --- user defined functions ---
[GOOD] ; --- assignments ---
[GOOD] (define-fun s1 () Real (* s0 s0))
[GOOD] (define-fun s3 () Bool (= s1 s2))
[GOOD] ; --- delayedEqualities ---
[GOOD] ; --- formula ---
[GOOD] (assert s3)
[SEND] (check-sat)
[RECV] sat
[SEND] (get-value (s0))
[RECV] ((s0 (witness ((BOUND_VARIABLE_840 Real)) (or (= BOUND_VARIABLE_840 (/ (- 2965827) 2097152)) (and (>= BOUND_VARIABLE_840 (/ (- 1482917) 1048576)) (>= (* (- 1.0) BOUND_VARIABLE_840) (/ 741455 524288)))))))
*** Solver   : CVC4
*** Exit code: ExitSuccess
*** Std-out  : 

FINAL:
Satisfiable. Model:
  s0 = -1.414216518402099609375... :: Real
DONE!
