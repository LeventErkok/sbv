** Calling: z3 -nw -in -smt2
[GOOD] ; Automatically generated by SBV. Do not edit.
[GOOD] (set-option :print-success true)
[GOOD] (set-option :global-declarations true)
[GOOD] (set-option :smtlib2_compliant true)
[GOOD] (set-option :diagnostic-output-channel "stdout")
[GOOD] (set-option :produce-models true)
[GOOD] (set-option :pp.max_depth      4294967295)
[GOOD] (set-option :pp.min_alias_size 4294967295)
[GOOD] (set-option :model.inline_def  true      )
[GOOD] (set-logic ALL) ; has unbounded values, using catch-all.
[GOOD] ; --- tuples ---
[GOOD] (declare-datatypes ((SBVTuple2 2)) ((par (T1 T2)
                                           ((mkSBVTuple2 (proj_1_SBVTuple2 T1)
                                                         (proj_2_SBVTuple2 T2))))))
[GOOD] ; --- sums ---
[GOOD] ; --- literal constants ---
[GOOD] ; --- top level inputs ---
[GOOD] (declare-fun s0 () (SBVTuple2 Int Int))
[GOOD] (declare-fun s1 () (SBVTuple2 Int Int))
[GOOD] ; --- constant tables ---
[GOOD] ; --- non-constant tables ---
[GOOD] ; --- uninterpreted constants ---
[GOOD] ; --- user defined functions ---
[GOOD] ; --- assignments ---
[GOOD] (define-fun s2 () Int (proj_1_SBVTuple2 s0))
[GOOD] (define-fun s3 () Int (proj_1_SBVTuple2 s1))
[GOOD] (define-fun s4 () Bool (< s2 s3))
[GOOD] (define-fun s5 () Bool (= s2 s3))
[GOOD] (define-fun s6 () Int (proj_2_SBVTuple2 s0))
[GOOD] (define-fun s7 () Int (proj_2_SBVTuple2 s1))
[GOOD] (define-fun s8 () Bool (< s6 s7))
[GOOD] (define-fun s9 () Bool (and s5 s8))
[GOOD] (define-fun s10 () Bool (or s4 s9))
[GOOD] (define-fun s11 () Bool (< s3 s2))
[GOOD] (define-fun s12 () Bool (< s7 s6))
[GOOD] (define-fun s13 () Bool (and s5 s12))
[GOOD] (define-fun s14 () Bool (or s11 s13))
[GOOD] ; --- delayedEqualities ---
[GOOD] ; --- formula ---
[GOOD] (assert s10)
[GOOD] (assert s14)
[SEND] (check-sat)
[RECV] unsat
*** Solver   : Z3
*** Exit code: ExitSuccess

 FINAL: ()
DONE!
