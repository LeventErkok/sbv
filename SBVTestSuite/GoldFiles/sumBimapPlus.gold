** Calling: z3 -nw -in -smt2
[GOOD] ; Automatically generated by SBV. Do not edit.
[GOOD] (set-option :print-success true)
[GOOD] (set-option :global-declarations true)
[GOOD] (set-option :smtlib2_compliant true)
[GOOD] (set-option :diagnostic-output-channel "stdout")
[GOOD] (set-option :produce-models true)
[GOOD] (set-option :pp.max_depth      4294967295)
[GOOD] (set-option :pp.min_alias_size 4294967295)
[GOOD] (set-option :model.inline_def  true      )
[GOOD] (set-logic ALL) ; has unbounded values, using catch-all.
[GOOD] ; --- tuples ---
[GOOD] ; --- sums ---
[GOOD] ; --- ADTs  --- 
[GOOD] ; User defined ADT: Either
[GOOD] (declare-datatype Either (par (a b) (
           (Left (getLeft_1 a))
           (Right (getRight_1 b))
       )))
[GOOD] ; --- literal constants ---
[GOOD] (define-fun s3 () Int 1)
[GOOD] ; --- top level inputs ---
[GOOD] (declare-fun s0 () (Either Int Int)) ; tracks user variable "x"
[GOOD] ; --- constant tables ---
[GOOD] ; --- non-constant tables ---
[GOOD] ; --- uninterpreted constants ---
[GOOD] ; --- user defined functions ---
[GOOD] ; --- assignments ---
[GOOD] (define-fun s1 () Bool ((as is-Left Bool) s0))
[GOOD] (define-fun s2 () Int (getLeft_1 s0))
[GOOD] (define-fun s4 () Int (+ s2 s3))
[GOOD] (define-fun s5 () (Either Int Int) ((as Left (Either Int Int)) s4))
[GOOD] (define-fun s6 () Int (getRight_1 s0))
[GOOD] (define-fun s7 () Int (+ s3 s6))
[GOOD] (define-fun s8 () (Either Int Int) ((as Right (Either Int Int)) s7))
[GOOD] (define-fun s9 () (Either Int Int) (ite s1 s5 s8))
[GOOD] (define-fun s10 () Bool ((as is-Left Bool) s9))
[GOOD] (define-fun s11 () Int (getLeft_1 s9))
[GOOD] (define-fun s12 () Int (getRight_1 s9))
[GOOD] (define-fun s13 () Int (ite s10 s11 s12))
[GOOD] (define-fun s14 () Int (ite s1 s2 s6))
[GOOD] (define-fun s15 () Int (+ s3 s14))
[GOOD] (define-fun s16 () Bool (= s13 s15))
[GOOD] ; --- delayedEqualities ---
[GOOD] ; --- formula ---
[GOOD] (assert s16)
[SEND] (check-sat)
[RECV] sat
[SEND] (get-value (s0))
[RECV] ((s0 (Left (- 1))))

MODEL: SMTModel {modelObjectives = [], modelBindings = Nothing, modelAssocs = [("x",Left (-1) :: Either Integer Integer)], modelUIFuns = []}
DONE.*** Solver   : Z3
*** Exit code: ExitSuccess
