** Calling: z3 -nw -in -smt2
[GOOD] ; Automatically generated by SBV. Do not edit.
[GOOD] (set-option :print-success true)
[GOOD] (set-option :global-declarations true)
[GOOD] (set-option :smtlib2_compliant true)
[GOOD] (set-option :diagnostic-output-channel "stdout")
[GOOD] (set-option :produce-models true)
[GOOD] (set-logic ALL) ; has unbounded values, using catch-all.
[GOOD] ; --- tuples ---
[GOOD] ; --- sums ---
[GOOD] ; --- literal constants ---
[GOOD] ; --- top level inputs ---
[GOOD] (declare-fun s0 () String) ; tracks user variable "a"
[GOOD] (declare-fun s1 () String) ; tracks user variable "b"
[GOOD] (declare-fun s2 () String) ; tracks user variable "c"
[GOOD] ; --- constant tables ---
[GOOD] ; --- non-constant tables ---
[GOOD] ; --- uninterpreted constants ---
[GOOD] ; --- user defined functions ---
[GOOD] ; --- assignments ---
[GOOD] (define-fun s3 () Bool (str.prefixof s1 s0))
[GOOD] (define-fun s4 () Bool (str.suffixof s2 s0))
[GOOD] (define-fun s5 () Int (str.len s0))
[GOOD] (define-fun s6 () Int (str.len s1))
[GOOD] (define-fun s7 () Int (str.len s2))
[GOOD] (define-fun s8 () Int (+ s6 s7))
[GOOD] (define-fun s9 () Bool (= s5 s8))
[GOOD] (define-fun s10 () String (str.++ s1 s2))
[GOOD] (define-fun s11 () Bool (= s0 s10))
[GOOD] (define-fun s12 () Bool (not s11))
[GOOD] ; --- delayedEqualities ---
[GOOD] ; --- formula ---
[GOOD] (assert s3)
[GOOD] (assert s4)
[GOOD] (assert s9)
[GOOD] (assert s12)
[SEND] (check-sat)
[RECV] unsat
*** Solver   : Z3
*** Exit code: ExitSuccess
