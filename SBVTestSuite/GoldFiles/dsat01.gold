** Calling: dReal --in --format smt2
[ISSUE] ; Automatically generated by SBV. Do not edit.
** Skipping heart-beat for the solver DReal
** Backend solver DReal does not support global decls.
** Some incremental calls, such as pop, will be limited.
[ISSUE] (set-option :smtlib2_compliant true)
[ISSUE] (set-option :produce-models true)
[ISSUE] (set-logic ALL) ; has unbounded values, using catch-all.
[ISSUE] ; --- uninterpreted sorts ---
[ISSUE] ; --- tuples ---
[ISSUE] ; --- sums ---
[ISSUE] ; --- literal constants ---
[ISSUE] (define-fun s3 () Real (/ 2.0 1.0))
[ISSUE] (define-fun s5 () Real (/ 5.0 1.0))
[ISSUE] ; --- top level inputs ---
[ISSUE] (declare-fun s0 () Real) ; tracks user variable "a0"
[ISSUE] (declare-fun s1 () Int) ; tracks user variable "i0"
[ISSUE] (declare-fun s2 () Bool) ; tracks user variable "b0"
[ISSUE] ; --- constant tables ---
[ISSUE] ; --- non-constant tables ---
[ISSUE] ; --- uninterpreted constants ---
[ISSUE] ; --- user defined functions ---
[ISSUE] ; --- assignments ---
[ISSUE] (define-fun s4 () Bool (> s0 s3))
[ISSUE] (define-fun s6 () Bool (<= s0 s5))
[ISSUE] ; --- delayedEqualities ---
[ISSUE] ; --- formula ---
[ISSUE] (assert s4)
[ISSUE] (assert s6)
[FIRE] (declare-fun s7 () Real)
[FIRE] (declare-fun s8 () Int)
[FIRE] (declare-fun s9 () Bool)
[FIRE] (define-fun s10 () Real (/ 3.0 1.0))
[FIRE] (define-fun s11 () Bool (> s7 s10))
[FIRE] (assert s11)
[FIRE] (define-fun s12 () Real (/ 12.0 1.0))
[FIRE] (define-fun s13 () Bool (<= s7 s12))
[FIRE] (assert s13)
[SEND] (check-sat)
[RECV] delta-sat
[SEND] (get-option :precision)
[RECV] 0.001
[SEND] (get-value (s0))
[RECV] (
       	(s0 (interval (closed (/ 7035748517859557 2251799813685248)) (closed (/ 7038000317673243 2251799813685248))))
       )
[SEND] (get-value (s7))
[RECV] (
       	(s7 (interval (closed (/ 7177048956168307 1125899906842624)) (closed (/ 7178174856075149 1125899906842624))))
       )
[SEND] (get-value (s1))
[RECV] (
       	(s1 0)
       )
[SEND] (get-value (s8))
[RECV] (
       	(s8 0)
       )
[SEND] (get-value (s2))
[RECV] (
       	(s2 true)
       )
[SEND] (get-value (s9))
[RECV] (
       	(s9 true)
       )
*** Solver   : DReal
*** Exit code: ExitSuccess

 FINAL:(Just "0.001",[[7035748517859557 % 2251799813685248, 7038000317673243 % 2251799813685248],[7177048956168307 % 1125899906842624, 7178174856075149 % 1125899906842624]],[RatInterval (ClosedPoint (7035748517859557 % 2251799813685248)) (ClosedPoint (7038000317673243 % 2251799813685248)),RatInterval (ClosedPoint (7177048956168307 % 1125899906842624)) (ClosedPoint (7178174856075149 % 1125899906842624))],[0,0],[True,True])
DONE!
