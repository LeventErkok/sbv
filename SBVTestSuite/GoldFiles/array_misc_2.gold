** Calling: z3 -nw -in -smt2
[GOOD] ; Automatically generated by SBV. Do not edit.
[GOOD] (set-option :print-success true)
[GOOD] (set-option :global-declarations true)
[GOOD] (set-option :smtlib2_compliant true)
[GOOD] (set-option :diagnostic-output-channel "stdout")
[GOOD] (set-option :produce-models true)
[GOOD] (set-option :pp.max_depth      4294967295)
[GOOD] (set-option :pp.min_alias_size 4294967295)
[GOOD] (set-option :model.inline_def  true      )
[GOOD] (set-logic ALL) ; has unbounded values, using catch-all.
[GOOD] ; --- uninterpreted sorts ---
[GOOD] ; --- tuples ---
[GOOD] ; --- sums ---
[GOOD] ; --- literal constants ---
[GOOD] (define-fun s5 () Int 4)
[GOOD] (define-fun s8 () Int 5)
[GOOD] (define-fun s11 () Int 12)
[GOOD] ; --- top level inputs ---
[GOOD] (declare-fun s0 () (Array Int Int))
[GOOD] (declare-fun s1 () Int)
[GOOD] (declare-fun s2 () Int)
[GOOD] (declare-fun s3 () Int)
[GOOD] ; --- constant tables ---
[GOOD] ; --- non-constant tables ---
[GOOD] ; --- uninterpreted constants ---
[GOOD] ; --- user defined functions ---
[GOOD] ; --- assignments ---
[GOOD] (define-fun s4 () Int (select s0 s1))
[GOOD] (define-fun s6 () Bool (= s4 s5))
[GOOD] (define-fun s7 () Int (select s0 s2))
[GOOD] (define-fun s9 () Bool (= s7 s8))
[GOOD] (define-fun s10 () Int (select s0 s3))
[GOOD] (define-fun s12 () Bool (= s10 s11))
[GOOD] (define-fun s13 () Bool (and s9 s12))
[GOOD] (define-fun s14 () Bool (and s6 s13))
[GOOD] ; --- delayedEqualities ---
[GOOD] ; --- formula ---
[GOOD] (assert s14)
[SEND] (check-sat)
[RECV] sat
[SEND] (get-value (s0))
[RECV] ((s0 (store (store ((as const (Array Int Int)) 4) 6 12) 3 5)))
[SEND] (get-value (s1))
[RECV] ((s1 2))
[SEND] (get-value (s2))
[RECV] ((s2 3))
[SEND] (get-value (s3))
[RECV] ((s3 6))
*** Solver   : Z3
*** Exit code: ExitSuccess

FINAL OUTPUT:
Satisfiable. Model:
  s0 = ([(3,5),(6,12)], 4) :: Array Integer Integer
  s1 =                   2 :: Integer
  s2 =                   3 :: Integer
  s3 =                   6 :: Integer
