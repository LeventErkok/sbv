** Calling: z3 -nw -in -smt2
[GOOD] ; Automatically generated by SBV. Do not edit.
[GOOD] (set-option :print-success true)
[GOOD] (set-option :global-declarations true)
[GOOD] (set-option :smtlib2_compliant true)
[GOOD] (set-option :diagnostic-output-channel "stdout")
[GOOD] (set-option :produce-models true)
[GOOD] (set-option :pp.max_depth      4294967295)
[GOOD] (set-option :pp.min_alias_size 4294967295)
[GOOD] (set-option :model.inline_def  true      )
[GOOD] (set-logic ALL) ; has unbounded values, using catch-all.
[GOOD] ; --- tuples ---
[GOOD] ; --- sums ---
[GOOD] ; --- ADTs  --- 
[GOOD] ; User defined ADT: Expr
[GOOD] (declare-datatype Expr (
           (Val (getVal_1 Int))
           (Var (getVar_1 String))
           (Add (getAdd_1 Expr) (getAdd_2 Expr))
           (Mul (getMul_1 Expr) (getMul_2 Expr))
           (Let (getLet_1 String) (getLet_2 Expr) (getLet_3 Expr))
       ))
[GOOD] ; --- literal constants ---
[GOOD] (define-fun s2 () Expr ((as Val Expr) 10))
[GOOD] (define-fun s8 () String "a")
[GOOD] (define-fun s11 () Int 0)
[GOOD] (define-fun s12 () String "b")
[GOOD] (define-fun s14 () String "c")
[GOOD] (define-fun s18 () Int 1)
[GOOD] (define-fun s19 () Int 2)
[GOOD] (define-fun s22 () Int 10)
[GOOD] (define-fun s25 () Int 3)
[GOOD] (define-fun s28 () Int 4)
[GOOD] (define-fun s31 () Int 5)
[GOOD] (define-fun s32 () Int 6)
[GOOD] (define-fun s62 () Int 8)
[GOOD] ; --- top level inputs ---
[GOOD] (declare-fun s0 () Expr)
[GOOD] (declare-fun s1 () Expr)
[GOOD] ; --- constant tables ---
[GOOD] ; --- non-constant tables ---
[GOOD] ; --- uninterpreted constants ---
[GOOD] ; --- user defined functions ---
[GOOD] ; --- assignments ---
[GOOD] (define-fun s3 () Bool (= s0 s2))
[GOOD] (define-fun s4 () Bool (= s1 s2))
[GOOD] (define-fun s5 () Bool (and s3 s4))
[GOOD] (define-fun s6 () Bool ((as is-Var Bool) s0))
[GOOD] (define-fun s7 () String (getVar_1 s0))
[GOOD] (define-fun s9 () Bool (= s7 s8))
[GOOD] (define-fun s10 () Bool (and s6 s9))
[GOOD] (define-fun s13 () Bool (= s7 s12))
[GOOD] (define-fun s15 () Bool (= s7 s14))
[GOOD] (define-fun s16 () Bool (or s13 s15))
[GOOD] (define-fun s17 () Bool (and s6 s16))
[GOOD] (define-fun s20 () Bool ((as is-Val Bool) s0))
[GOOD] (define-fun s21 () Int (getVal_1 s0))
[GOOD] (define-fun s23 () Bool (< s21 s22))
[GOOD] (define-fun s24 () Bool (and s20 s23))
[GOOD] (define-fun s26 () Bool (= s21 s22))
[GOOD] (define-fun s27 () Bool (and s20 s26))
[GOOD] (define-fun s29 () Bool (> s21 s22))
[GOOD] (define-fun s30 () Bool (and s20 s29))
[GOOD] (define-fun s33 () Int (ite s30 s31 s32))
[GOOD] (define-fun s34 () Int (ite s27 s28 s33))
[GOOD] (define-fun s35 () Int (ite s24 s25 s34))
[GOOD] (define-fun s36 () Int (ite s6 s19 s35))
[GOOD] (define-fun s37 () Int (ite s17 s18 s36))
[GOOD] (define-fun s38 () Int (ite s10 s11 s37))
[GOOD] (define-fun s39 () Bool ((as is-Var Bool) s1))
[GOOD] (define-fun s40 () String (getVar_1 s1))
[GOOD] (define-fun s41 () Bool (= s8 s40))
[GOOD] (define-fun s42 () Bool (and s39 s41))
[GOOD] (define-fun s43 () Bool (= s12 s40))
[GOOD] (define-fun s44 () Bool (= s14 s40))
[GOOD] (define-fun s45 () Bool (or s43 s44))
[GOOD] (define-fun s46 () Bool (and s39 s45))
[GOOD] (define-fun s47 () Bool ((as is-Val Bool) s1))
[GOOD] (define-fun s48 () Int (getVal_1 s1))
[GOOD] (define-fun s49 () Bool (< s48 s22))
[GOOD] (define-fun s50 () Bool (and s47 s49))
[GOOD] (define-fun s51 () Bool (= s22 s48))
[GOOD] (define-fun s52 () Bool (and s47 s51))
[GOOD] (define-fun s53 () Bool (> s48 s22))
[GOOD] (define-fun s54 () Bool (and s47 s53))
[GOOD] (define-fun s55 () Int (ite s54 s31 s32))
[GOOD] (define-fun s56 () Int (ite s52 s28 s55))
[GOOD] (define-fun s57 () Int (ite s50 s25 s56))
[GOOD] (define-fun s58 () Int (ite s39 s19 s57))
[GOOD] (define-fun s59 () Int (ite s46 s18 s58))
[GOOD] (define-fun s60 () Int (ite s42 s11 s59))
[GOOD] (define-fun s61 () Int (+ s38 s60))
[GOOD] (define-fun s63 () Bool (distinct s61 s62))
[GOOD] ; --- delayedEqualities ---
[GOOD] ; --- formula ---
[GOOD] (assert s5)
[GOOD] (assert s63)
[SEND] (check-sat)
[RECV] unsat
All good.
*** Solver   : Z3
*** Exit code: ExitSuccess
