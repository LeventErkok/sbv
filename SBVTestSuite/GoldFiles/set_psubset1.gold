** Calling: z3 -nw -in -smt2
[GOOD] ; Automatically generated by SBV. Do not edit.
[GOOD] (set-option :print-success true)
[GOOD] (set-option :global-declarations true)
[GOOD] (set-option :smtlib2_compliant true)
[GOOD] (set-option :diagnostic-output-channel "stdout")
[GOOD] (set-option :produce-models true)
[GOOD] (set-option :pp.max_depth      4294967295)
[GOOD] (set-option :pp.min_alias_size 4294967295)
[GOOD] (set-option :model.inline_def  true      )
[GOOD] (set-logic ALL) ; has unbounded values, using catch-all.
[GOOD] ; --- tuples ---
[GOOD] ; --- sums ---
[GOOD] ; --- literal constants ---
[GOOD] (define-fun s2 () (Array Int Bool) (store ((as const (Array Int Bool)) false) 0 true))
[GOOD] ; --- top level inputs ---
[GOOD] (declare-fun s0 () (Array Int Bool)) ; tracks user variable "a"
[GOOD] (declare-fun s1 () (Array Int Bool)) ; tracks user variable "b"
[GOOD] ; --- constant tables ---
[GOOD] ; --- non-constant tables ---
[GOOD] ; --- uninterpreted constants ---
[GOOD] ; --- user defined functions ---
[GOOD] ; --- assignments ---
[GOOD] (define-fun s3 () Bool (= s0 s2))
[GOOD] (define-fun s4 () Bool (= s1 s2))
[GOOD] ; --- delayedEqualities ---
[GOOD] ; --- formula ---
[GOOD] (assert s3)
[GOOD] (assert s4)
[SEND] (check-sat)
[RECV] sat
[SEND] (get-value (s0))
[RECV] ((s0 (store ((as const (Array Int Bool)) false) 0 true)))
[SEND] (get-value (s1))
[RECV] ((s1 (store ((as const (Array Int Bool)) false) 0 true)))
[GOOD] (define-fun s5 () Bool (subset s0 s1))
[GOOD] (define-fun s6 () Bool (distinct s0 s1))
[GOOD] (define-fun s7 () Bool (and s5 s6))
[SEND] (get-value (s7))
[RECV] ((s7 false))
[GOOD] (define-fun s8 () (Array Int Bool) (complement s1))
[GOOD] (define-fun s9 () Bool (subset s0 s8))
[GOOD] (define-fun s10 () Bool (distinct s0 s8))
[GOOD] (define-fun s11 () Bool (and s9 s10))
[SEND] (get-value (s11))
[RECV] ((s11 false))
[GOOD] (define-fun s12 () (Array Int Bool) (complement s0))
[GOOD] (define-fun s13 () Bool (subset s12 s1))
[GOOD] (define-fun s14 () Bool (distinct s1 s12))
[GOOD] (define-fun s15 () Bool (and s13 s14))
[SEND] (get-value (s15))
[RECV] ((s15 false))
[GOOD] (define-fun s16 () Bool (subset s12 s8))
[GOOD] (define-fun s17 () Bool (distinct s8 s12))
[GOOD] (define-fun s18 () Bool (and s16 s17))
[SEND] (get-value (s18))
[RECV] ((s18 false))
*** Solver   : Z3
*** Exit code: ExitSuccess

FINAL:
({0},{0},False,False,False,False)
DONE!
