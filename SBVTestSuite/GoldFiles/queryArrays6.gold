** Calling: z3 -nw -in -smt2
[GOOD] ; Automatically generated by SBV. Do not edit.
[GOOD] (set-option :print-success true)
[GOOD] (set-option :global-declarations true)
[GOOD] (set-option :smtlib2_compliant true)
[GOOD] (set-option :diagnostic-output-channel "stdout")
[GOOD] (set-option :produce-models true)
[GOOD] (set-option :pp.max_depth      4294967295)
[GOOD] (set-option :pp.min_alias_size 4294967295)
[GOOD] (set-option :model.inline_def  true      )
[GOOD] (set-logic ALL) ; has unbounded values, using catch-all.
[GOOD] ; --- tuples ---
[GOOD] ; --- sums ---
[GOOD] ; --- literal constants ---
[GOOD] ; --- top level inputs ---
[GOOD] (declare-fun s0 () (Array Int Int)) ; tracks user variable "a"
[GOOD] ; --- constant tables ---
[GOOD] ; --- non-constant tables ---
[GOOD] ; --- uninterpreted constants ---
[GOOD] ; --- user defined functions ---
[GOOD] ; --- assignments ---
[GOOD] ; --- delayedEqualities ---
[GOOD] ; --- formula ---
[GOOD] (push 1)
[GOOD] (define-fun s1 () Int 1)
[GOOD] (define-fun s4 () Int 5)
[GOOD] (define-fun s2 () (Array Int Int) (store s0 s1 s1))
[GOOD] (define-fun s3 () Int (select s2 s1))
[GOOD] (define-fun s5 () Bool (= s3 s4))
[GOOD] (assert s5)
[SEND] (check-sat)
[RECV] unsat
[GOOD] (pop 1)
[GOOD] (declare-fun s6 () Int)
[GOOD] (define-fun s8 () Int 3)
[GOOD] (define-fun s7 () Bool (>= s6 s1))
[GOOD] (define-fun s9 () Bool (< s6 s8))
[GOOD] (define-fun s10 () Bool (and s7 s9))
[GOOD] (assert s10)
[GOOD] (push 1)
[GOOD] (define-fun s11 () Int (+ s3 s6))
[GOOD] (define-fun s12 () (Array Int Int) (store s2 s1 s11))
[GOOD] (define-fun s13 () Int (select s12 s1))
[GOOD] (define-fun s14 () Bool (= s4 s13))
[GOOD] (assert s14)
[SEND] (check-sat)
[RECV] unsat
[GOOD] (pop 1)
[GOOD] (declare-fun s15 () Int)
[GOOD] (define-fun s16 () Bool (>= s15 s1))
[GOOD] (define-fun s17 () Bool (< s15 s8))
[GOOD] (define-fun s18 () Bool (and s16 s17))
[GOOD] (assert s18)
[GOOD] (push 1)
[GOOD] (define-fun s19 () Int (+ s13 s15))
[GOOD] (define-fun s20 () (Array Int Int) (store s12 s1 s19))
[GOOD] (define-fun s21 () Int (select s20 s1))
[GOOD] (define-fun s22 () Bool (= s4 s21))
[GOOD] (assert s22)
[SEND] (check-sat)
[RECV] sat
[SEND] (get-value (s6))
[RECV] ((s6 2))
[SEND] (get-value (s15))
[RECV] ((s15 2))
*** Solver   : Z3
*** Exit code: ExitSuccess

 FINAL:[2,2]
DONE!
