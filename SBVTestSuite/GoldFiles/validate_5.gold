** Calling: z3 -nw -in -smt2
[GOOD] ; Automatically generated by SBV. Do not edit.
[GOOD] (set-option :print-success true)
[GOOD] (set-option :global-declarations true)
[GOOD] (set-option :smtlib2_compliant true)
[GOOD] (set-option :diagnostic-output-channel "stdout")
[GOOD] (set-option :produce-models true)
[GOOD] (set-logic ALL) ; has unbounded values, using catch-all.
[GOOD] ; --- tuples ---
[GOOD] ; --- sums ---
[GOOD] ; --- literal constants ---
[GOOD] (define-fun s3 () Int 12)
[GOOD] (define-fun s5 () Int 3)
[GOOD] ; --- top level inputs ---
[GOOD] (declare-fun s0 () Int) ; tracks user variable "x"
[GOOD] (declare-fun s1 () Int) ; tracks user variable "y"
[GOOD] ; --- constant tables ---
[GOOD] ; --- non-constant tables ---
[GOOD] ; --- uninterpreted constants ---
[GOOD] ; --- user defined functions ---
[GOOD] ; --- assignments ---
[GOOD] (define-fun s2 () Bool (> s0 s1))
[GOOD] (define-fun s4 () Bool (> s0 s3))
[GOOD] (define-fun s6 () Int (+ s1 s5))
[GOOD] (define-fun s7 () Bool (= s0 s6))
[GOOD] ; --- delayedEqualities ---
[GOOD] ; --- formula ---
[GOOD] (assert s2)
[GOOD] (assert s4)
[GOOD] (assert s7)
[SEND] (check-sat)
[RECV] sat
[SEND] (get-value (s0))
[RECV] ((s0 13))
[SEND] (get-value (s1))
[RECV] ((s1 10))
*** Solver   : Z3
*** Exit code: ExitSuccess
[VALIDATE] Validating the model. Assignment:
[VALIDATE]       x = 13 :: Integer
[VALIDATE]       y = 10 :: Integer
[VALIDATE] Validating 2 constraint(s).
[VALIDATE] Validated all constraints.
[VALIDATE] Validating outputs.
[VALIDATE] All outputs are satisfied. Validation complete.

FINAL OUTPUT:
Satisfiable. Model:
  x = 13 :: Integer
  y = 10 :: Integer
